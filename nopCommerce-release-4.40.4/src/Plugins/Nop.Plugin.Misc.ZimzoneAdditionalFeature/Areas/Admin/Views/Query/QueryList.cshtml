@model QuestionSearchModel
@{
    Layout = "_AdminLayout";
    ViewBag.PageTitle = T("Plugins.Misc.ZimzoneAdditionalFeature.QueryList").Text;
    Html.SetActiveMenuItemSystemName("AdditionalFeature.Queries");
}

@{
    const string hideSearchBlockAttributeName = "QueryListPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

<form asp-controller="ServiceRequest" asp-action="Requests" method="post">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T("Plugins.Misc.ZimzoneAdditionalFeature.QueryList")
        </h1>
    </div>

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="cards-group">
                    <div class="card card-default card-search">
                        <div class="card-body">
                            <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                                <div class="search-text">@T("Admin.Common.Search")</div>
                                <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                                <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                            </div>

                            <div class="search-body @(hideSearchBlock ? "closed" : "")">
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="CustomerEmail" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="CustomerEmail" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="StatusId" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="StatusId" asp-items="Model.AvailableStatus" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-7">
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="CustomerName" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="CustomerName" />
                                            </div>
                                        </div>
                                        
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="text-center col-12">
                                        <button type="button" id="search-queries" class="btn btn-primary btn-search">
                                            <i class="fas fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card card-default">
                        <div class="card-body">
                            @await Html.PartialAsync("Table", new DataTablesModel
                       {
                           Name = "requests-grid",
                           //UrlUpdate = new DataUrl("ServicesUpdate", "AdditionalFeature", null),
                           UrlRead = new DataUrl("QueryList", "Query", null),
                           SearchButtonId = "search-queries",
                           Length = Model.PageSize,
                           LengthMenu = Model.AvailablePageSizes,
                           Filters = new List<FilterParameter>
                           {
                                    new FilterParameter(nameof(Model.CustomerName)),
                                    new FilterParameter(nameof(Model.CustomerEmail)),
                                    new FilterParameter(nameof(Model.StatusId))
                           },
                           ColumnCollection = new List<ColumnProperty>
                                {
                                    new ColumnProperty(nameof(QuestionModel.FullName))
                                    {
                                        Title = T("Plugins.Misc.ZimzoneAdditionalFeature.Admin.Question.Field.FullName").Text,
                                        Width = "100",
                                        ClassName = NopColumnClassDefaults.CenterAll,
                                    },
                                    new ColumnProperty(nameof(QuestionModel.Email))
                                    {
                                        Title = T("Plugins.Misc.ZimzoneAdditionalFeature.Admin.Question.Field.Email").Text,
                                        Width = "100",
                                        ClassName = NopColumnClassDefaults.CenterAll,
                                    },
                                     new ColumnProperty(nameof(QuestionModel.MarkedAsRead))
                                    {
                                        Title = T("Plugins.Misc.ZimzoneAdditionalFeature.Admin.Question.Field.MarkedAsRead").Text,
                                        Width = "100",
                                        ClassName = NopColumnClassDefaults.CenterAll,
                                        Render = new RenderBoolean()
                                    },
                                    new ColumnProperty(nameof(QuestionModel.ProductName))
                                    {
                                        Title = T("Plugins.Misc.ZimzoneAdditionalFeature.Admin.Question.Field.ProductName").Text,
                                        Width = "100",
                                        ClassName = NopColumnClassDefaults.CenterAll,
                                    },
                                    new ColumnProperty(nameof(QuestionModel.CreatedOn))
                                    {
                                        Title = T("Plugins.Misc.ZimzoneAdditionalFeature.Question.CreatedOn").Text,
                                        Width = "120",
                                        Render = new RenderDate()
                                    },
                                    new ColumnProperty(nameof(QuestionModel.Id))
                                    {
                                        Title = T("Admin.Common.Edit").Text,
                                        Width = "80",
                                        ClassName =  NopColumnClassDefaults.Button,
                                        Render = new RenderCustom("EditQuery")
                                    },
                                    new ColumnProperty(nameof(QuestionModel.Id))
                                    {
                                        Title = T("Admin.Common.Delete").Text,
                                        Width = "80",
                                        ClassName =  NopColumnClassDefaults.Button,
                                        Render = new RenderCustom("DeleteQuery")
                                    }
                                }
                       })

                            <script>
                                function EditQuery(data, type, row, meta) {
                                    return '<a class="btn btn-default" href="Edit/' + row.Id + '"><i class="fa fa-pencil"></i>Edit</a>';
                                };
                                function DeleteQuery(data, type, row, meta) {
                                    return '<a class="btn btn-default" onclick="return ConfirmDelete();" href="Delete/' + row.Id + '"><i class="fa fa-pencil"></i>Delete</a>';
                                };
                                function ConfirmDelete() {
                                    return confirm('Do you want to delete?');
                                };
                            </script>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

</form>
